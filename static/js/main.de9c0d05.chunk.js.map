{"version":3,"sources":["utils/tabbar_config.js","components/Img/index.js","pages/Time/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js","assets/go.wav"],"names":["tabBars","title","path","icon","MyImg","src","className","alt","Time","state","endTime","showTime","showNotice","loop","visible","over","flag","getTime","Date","fail","timeRange","clt","setInterval","lhour","lminute","lsecond","flong","setState","tips","clTime","Math","floor","_day","_hour","_minite","round","choosetime","clearInterval","setTime","v","audio","play","cls","setTimeout","clearTimeout","renderNotice","marqueeProps","style","padding","this","document","getElementById","img","message","buttonText","buttonType","onButtonClick","mode","format","minDate","maxDate","value","onDismiss","onChange","extra","go","id","hidden","controls","Component","Roll","lazy","Song","Home","selectedTab","props","location","pathname","renderTabBarItems","map","item","index","Item","key","type","selectedIcon","selected","onPress","history","push","exact","component","unselectedTintColor","tintColor","barTintColor","tabBarPosition","noRenderContent","NotFound","App","fallback","render","to","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"mVAuBeA,EAlBC,CACd,CACEC,MAAO,eACPC,KAAM,QACNC,KAAM,SAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,SAER,CACEF,MAAO,eACPC,KAAM,aACNC,KAAM,U,uJCdKC,EAJD,SAAAC,GACZ,OAAO,yBAAKA,IAAKA,EAAKC,UAAU,yBAAyBC,IAAI,MCmJhDC,G,kNA3IbC,MAAQ,CACNC,QAAS,KACTC,SAAU,GACVC,YAAY,EACZC,MAAM,EACNC,SAAS,G,EAWXC,KAAO,WAAO,IACJL,EAAY,EAAKD,MAAjBC,QACR,GAAKA,EAAL,CAEA,IAAIM,EAAON,EAAQO,UACnB,GAAID,GAAQ,IAAIE,KACd,OAAO,IAAMC,KAAK,mDAAY,GAGhC,EAAKC,UAAUJ,GAEf,EAAKK,IAAMC,aAAY,WACrB,EAAKF,UAAUJ,KACd,O,EAGLI,UAAY,SAACJ,GACX,IAYUO,EAAOC,EAASC,EAVtBC,EAAQV,GAFK,IAAIE,KAKrB,GAAIQ,EAAQ,IAKV,OAJA,EAAKC,SAAS,CACZhB,SAAU,KAEZ,EAAKiB,OACE,EAAKC,SAKPC,KAAKC,MAAML,EADJ,OAGd,IAAIM,EAAON,EAHG,MAIdH,EAAQO,KAAKC,MAAMC,EAJ2B,MAM9C,IAAIC,EAAQH,KAAKC,MAAMC,GANuB,KAO9CR,EAAUM,KAAKC,MAAME,EAPsD,KAS3E,IAAIC,EAAUJ,KAAKC,MAAME,EATkD,KAU3ER,EAAUK,KAAKK,MAAMD,EAV0E,KAW/F,EAAKP,SAAS,CACZhB,SAAU,6CAAYY,EAAQ,eAAOC,EAAU,SAAMC,EAAU,Y,EAKnEW,WAAa,WACX,EAAKP,SADY,IAETf,EAAY,EAAKL,MAAjBK,QACR,EAAKa,SAAS,CACZb,SAAUA,K,EAIde,OAAS,WACH,EAAKR,KAAKgB,cAAc,EAAKhB,M,EAInCiB,QAAU,SAACC,GACT,EAAKZ,SAAS,CAAEjB,QAAS6B,EAAGzB,SAAS,IAAS,WAC5C,EAAKC,W,EAITa,KAAO,WACL,EAAKY,MAAMC,OACX,EAAKd,SAAS,CACZf,YAAY,IAEd,EAAK8B,IAAMC,YAAW,WACpBC,aAAa,EAAKF,KAClB,EAAKf,SAAS,CAAEd,MAAM,EAAOD,YAAY,MACxC,M,EAGLiC,aAAe,WACb,OAAO,EAAKpC,MAAMG,WAAa,uBAAWkC,aAAc,CAAEjC,MAAM,EAAMkC,MAAO,CAAEC,QAAS,aAAzD,kLAEpB,M,mFAxFXC,KAAKT,MAAQU,SAASC,eAAe,W,6CA4FrCF,KAAKpB,W,+BAIG,IAAD,OACP,OACE,yBAAKvB,UAAU,QACZ2C,KAAKJ,eAEN,2BACE,uBACEO,IAAKhD,EAAM,uEACXH,MAAM,2BACNoD,QAAQ,+DACRC,WAAYL,KAAKxC,MAAME,SAAWsC,KAAKxC,MAAME,SAAW,2BACxD4C,WAAW,UACXC,cAAeP,KAAKb,aAGtB,uBACEtB,QAASmC,KAAKxC,MAAMK,QACpB2C,KAAK,OACLC,OAAO,QACPzD,MAAM,uCACN0D,QAAS,IAAIzC,KACb0C,QAAS,IAAI1C,MAAO,IAAIA,KAAQ,MAChC2C,MAAOZ,KAAKxC,MAAMC,QAClBoD,UAAW,kBAAM,EAAKnC,SAAS,CAAEb,SAAS,KAC1CiD,SAAUd,KAAKX,QACf0B,MAAM,iBAER,2BAAO3D,IAAK4D,IAAIpD,KAAMoC,KAAKxC,MAAMI,KAAMqD,GAAG,QAAQC,QAAM,EAACC,UAAQ,U,GAtIxDC,cCEbC,EAAOC,gBAAK,kBAAM,uDAClBC,EAAOD,gBAAK,kBAAM,iCAyDTE,E,2MAtDbhE,MAAQ,CACNiE,YAAa,EAAKC,MAAMC,SAASC,U,EAInCC,kBAAoB,WAClB,OAAO9E,EAAQ+E,KAAI,SAACC,EAAMC,GAAP,OAAiB,sBAAQC,KAAR,CAClCjF,MAAO+E,EAAK/E,MACZkF,IAAKF,EACL9E,KACE,uBAAMiF,KAAK,aAEbC,aACE,uBAAMD,KAAK,aAEbE,SAAU,EAAK7E,MAAMiE,cAAgBM,EAAK9E,KAC1CqF,QAAS,WACP,EAAK5D,SAAS,CACZ+C,YAAaM,EAAK9E,OACjB,WACD,EAAKyE,MAAMa,QAAQC,KAAKT,EAAK9E,gB,wEAWnC,OACE,yBAAKI,UAAU,QACb,kBAAC,IAAD,CAAOoF,OAAK,EAACxF,KAAK,QAAQyF,UAAWnF,IACrC,kBAAC,IAAD,CAAON,KAAK,aAAayF,UAAWrB,IACpC,kBAAC,IAAD,CAAOpE,KAAK,aAAayF,UAAWnB,IACpC,yBAAKlE,UAAU,UACb,uBACEsF,oBAAoB,UACpBC,UAAU,UACVC,aAAa,QACbC,eAAe,SACfC,iBAAiB,GAGf/C,KAAK6B,2B,GA/CAT,aCLb4B,EAAW,kBAAM,gCAAQ,wCAoBhBC,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,gCAAQ,4CAC1B,yBAAK7F,UAAU,OACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOoF,OAAK,EAACxF,KAAK,IAAIkG,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAG,aACjD,kBAAC,IAAD,CAAOnG,KAAK,QAAQyF,UAAWlB,IAG/B,kBAAC,IAAD,CAAOkB,UAAWM,SCPVK,QACW,cAA7BC,OAAO3B,SAAS4B,UAEe,UAA7BD,OAAO3B,SAAS4B,UAEhBD,OAAO3B,SAAS4B,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASlD,SAASC,eAAe,SD6H3C,kBAAmBwD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM7D,a,mBEzI5B+D,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.de9c0d05.chunk.js","sourcesContent":["/**\n * 底部菜单数据\n * \n */\n\nconst tabBars = [\n  {\n    title: '上课',\n    path: '/home',\n    icon: 'icon-'\n  },\n  {\n    title: '点名',\n    path: '/home/roll',\n    icon: 'icon-'\n  },\n  {\n    title: '点歌',\n    path: '/home/song',\n    icon: 'icon-'\n  },\n]\n\nexport default tabBars","import React from 'react';\nconst MyImg = src => {\n  return <img src={src} className=\"spe am-icon am-icon-md\" alt=\"\" />\n};\n\nexport default MyImg","import React, { Component } from 'react';\nimport { WingBlank, DatePicker, Result, NoticeBar, Toast } from 'antd-mobile';\nimport go from '../../assets/go.wav'\nimport MyImg from '../../components/Img';\n\nimport './index.css'\n\n\nclass Time extends Component {\n\n  state = {\n    endTime: null,\n    showTime: '',\n    showNotice: false,\n    loop: true,\n    visible: false\n  }\n\n  componentDidMount() {\n    this.audio = document.getElementById('audio')\n\n\n  }\n\n\n\n  over = () => {\n    const { endTime } = this.state;\n    if (!endTime) return;\n\n    let flag = endTime.getTime();\n    if (flag < +new Date) {\n      return Toast.fail('休息时间太少了！', 2)\n    }\n\n    this.timeRange(flag);\n\n    this.clt = setInterval(() => {\n      this.timeRange(flag)\n    }, 1000)\n  }\n\n  timeRange = (flag) => {\n    let startTime = +new Date();\n    // 剩余时间毫秒数\n    let flong = flag - startTime;\n\n    // 结束\n    if (flong < 1000) {\n      this.setState({\n        showTime: ''\n      })\n      this.tips()\n      return this.clTime()\n    }\n    let lday, lhour, lminute, lsecond;\n    // 时间单位（毫秒）\n    let dayTime = 24 * 60 * 60 * 1000, hourTime = 60 * 60 * 1000, miniteTime = 60 * 1000, second = 1000;\n    lday = Math.floor(flong / dayTime);\n    // 不够一天\n    let _day = flong % dayTime;\n    lhour = Math.floor(_day / hourTime);\n    // 不够一小时\n    let _hour = Math.floor(_day) % hourTime;\n    lminute = Math.floor(_hour / miniteTime);\n    // 不够一分钟\n    let _minite = Math.floor(_hour % miniteTime);\n    lsecond = Math.round(_minite / second);\n    this.setState({\n      showTime: '距离上课剩余：' + lhour + '小时' + lminute + '分' + lsecond + '秒'\n    })\n  }\n\n  // 设置上课时间\n  choosetime = () => {\n    this.clTime()\n    const { visible } = this.state;\n    this.setState({\n      visible: !visible\n    })\n  }\n\n  clTime = () => {\n    if (this.clt) clearInterval(this.clt);\n  }\n\n  // 处理倒计时\n  setTime = (v) => {\n    this.setState({ endTime: v, visible: false }, () => {\n      this.over()\n    })\n  }\n\n  tips = () => {\n    this.audio.play();\n    this.setState({\n      showNotice: true\n    })\n    this.cls = setTimeout(() => {\n      clearTimeout(this.cls)\n      this.setState({ loop: false, showNotice: false })\n    }, 30 * 1000)\n  }\n\n  renderNotice = () => {\n    return this.state.showNotice ? <NoticeBar marqueeProps={{ loop: true, style: { padding: '0 7.5px' } }}>\n      通知：上课了，同学们！老班喊你回来上课了！上课了，同学们！\n</NoticeBar> : null\n  }\n\n  componentWillUnmount() {\n    this.clTime()\n  }\n\n\n  render() {\n    return (\n      <div className=\"time\">\n        {this.renderNotice()}\n\n        <WingBlank>\n          <Result\n            img={MyImg('https://gw.alipayobjects.com/zos/rmsportal/HWuSTipkjJRfTWekgTUG.svg')}\n            title=\"课间休息\"\n            message=\"劳逸结合，马上回来！\"\n            buttonText={this.state.showTime ? this.state.showTime : '上课时间'}\n            buttonType=\"warning\"\n            onButtonClick={this.choosetime}\n          />\n          {/* 选择时间 */}\n          <DatePicker\n            visible={this.state.visible}\n            mode=\"time\"\n            format=\"HH:mm\"\n            title=\"选择休息时间\"\n            minDate={new Date}\n            maxDate={new Date((+new Date) + 60 * 60 * 1000)}\n            value={this.state.endTime}\n            onDismiss={() => this.setState({ visible: false })}\n            onChange={this.setTime}\n            extra=\"下课\"\n          />\n          <audio src={go} loop={this.state.loop} id=\"audio\" hidden controls />\n        </WingBlank>\n      </div>\n    );\n  }\n}\n\nexport default Time;","import React, { Component, lazy } from 'react'\n\nimport { Route } from 'react-router-dom'\n\nimport { TabBar, Icon } from 'antd-mobile'\nimport tabBars from '../../utils/tabbar_config'\n\nimport './index.scss'\n\nimport Time from '../Time'\nconst Roll = lazy(() => import('../Roll'))\nconst Song = lazy(() => import('../Song/index'))\nclass Home extends Component {\n\n  state = {\n    selectedTab: this.props.location.pathname,\n  };\n\n\n  renderTabBarItems = () => {\n    return tabBars.map((item, index) => <TabBar.Item\n      title={item.title}\n      key={index}\n      icon={\n        <Icon type=\"ellipsis\" />\n      }\n      selectedIcon={\n        <Icon type=\"ellipsis\" />\n      }\n      selected={this.state.selectedTab === item.path}\n      onPress={() => {\n        this.setState({\n          selectedTab: item.path,\n        }, () => {\n          this.props.history.push(item.path)\n        })\n      }}\n\n    />)\n  }\n\n\n\n  render () {\n    // console.log(this.props);\n    return (\n      <div className=\"home\">\n        <Route exact path=\"/home\" component={Time} />\n        <Route path=\"/home/roll\" component={Roll} />\n        <Route path=\"/home/song\" component={Song} />\n        <div className=\"barBox\">\n          <TabBar\n            unselectedTintColor=\"#949494\"\n            tintColor=\"#33A3F4\"\n            barTintColor=\"white\"\n            tabBarPosition=\"bottom\"\n            noRenderContent={true}\n          >\n            {\n              this.renderTabBarItems()\n            }\n          </TabBar>\n        </div >\n      </div>\n    )\n  }\n}\n\nexport default Home","import React, { lazy, Suspense } from 'react';\n// import { Button } from 'antd-mobile';\n\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\n\n\nconst NotFound = () => <center><h2>404...</h2></center>\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={<center><h1>Loading...</h1></center>}>\n        <div className=\"app\">\n          <Switch>\n            {/* 一级路由 */}\n            <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n            <Route path=\"/home\" component={Home} />\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/go.60b39fe5.wav\";"],"sourceRoot":""}