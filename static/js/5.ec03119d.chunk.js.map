{"version":3,"sources":["pages/Roll/index.js"],"names":["students","Array","from","map","item","index","student_name","ClassMap","id","label","window","shuffle","reg","Roll","state","luck","isRoll","speed","changeSpeed","sp","rollLuck","setState","cln","setInterval","selOne","stopRoll","clearInterval","shuffleClass","success","length","replace","join","len","one","Math","floor","random","cur","name","class_id","cas","filter","this","JSON","parse","localStorage","getItem","className","img","type","style","fill","title","message","buttonText","buttonType","onButtonClick","onClick","marks","10","50","90","defaultValue","min","max","onChange","Component"],"mappings":"+WAQMA,EAAWC,MAAMC,KAAK,IAAID,MAAM,MAAME,KAAI,SAACC,EAAMC,GAAY,MAAO,CAAEC,aAAc,SAAMD,MAI1FE,EAAW,CAAC,CAAEC,GAAI,KAAMC,MAAO,YAAS,CAAED,GAAI,KAAMC,MAAO,aAOjEC,OAAOC,QAAUA,UACjB,IAAMC,EAAM,WACNC,E,2MACJC,MAAQ,CACNC,KAbQ,WAcRC,QAAQ,G,EAGVC,MAAQ,G,EAERC,YAAc,SAACC,GAEb,EAAKF,MAAQE,G,EASfC,SAAW,WACT,EAAKC,SAAS,CACZL,QAAS,EAAKF,MAAME,SACnB,WACG,EAAKF,MAAME,OACb,EAAKM,IAAMC,aAAY,WACrB,EAAKF,SAAS,CACZN,KAAM,EAAKS,aAEZ,EAAKP,OAER,EAAKQ,e,EAMXA,SAAW,WACT,EAAKH,KAAOI,cAAc,EAAKJ,M,EAIjCK,aAAe,WACb,EAAK3B,SAAWW,kBAAQ,EAAKX,UAC7B,IAAM4B,QAAN,kCAAqB,EAAK5B,SAAS6B,OAAnC,8GACQ,EAAK7B,SAASG,KAAI,SAACC,GAAD,OAAUA,EAAKE,aAAawB,QAAQlB,EAAK,QAAMmB,KAAK,MACxE,I,EAIRP,OAAS,WACP,IAAIQ,EAAM,EAAKhC,SAAS6B,OACpBI,EAAMC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAM,GAAK,EAE5CK,EAAM,EAAKrC,SAASiC,GAAMK,EAAOD,EAAI/B,aACzC,GAAI+B,EAAIE,SAAU,CAChB,IAAMC,EAAMjC,EAASkC,QAAO,SAACrC,GAAD,OAAUA,EAAKI,KAAO6B,EAAIE,YACtDC,EAAIX,SAAWS,GAAI,gBAAQE,EAAI,GAAG/B,MAAf,WAErB,OAAO6B,G,mFA5CPI,KAAK1C,SAAW2C,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB9C,I,6CAgDhE0C,KAAKjB,a,+BAEI,IAAD,EACiBiB,KAAK5B,MAAtBC,EADA,EACAA,KAAMC,EADN,EACMA,OACd,OACE,yBAAK+B,UAAU,QACb,2BACE,uBACEC,IAAK,uBAAMC,KAAK,eAAeF,UAAU,MAAMG,MAAO,CAAEC,KAAM,aAC9DC,MAAOrC,EACPsC,QAAQ,2BACRC,WAAatC,EAAgB,eAAP,eACtBuC,WAAW,UACXC,cAAed,KAAKtB,WAEtB,4BACA,uBAAQ6B,KAAK,UAAUQ,QAASf,KAAKf,cAArC,gBACA,uBAEE+B,MAAO,CAAEC,GAAI,YAAQC,GAAI,WAAOC,GAAI,YACpCC,aAAcpB,KAAKzB,MACnB8C,IAAK,GACLC,IAAK,GACLC,SAAUvB,KAAKxB,oB,GArFRgD,aA8FJrD","file":"static/js/5.ec03119d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { WingBlank, Result, Icon, Button, WhiteSpace, Toast, Slider } from 'antd-mobile'\n// 洗牌算法\nimport { shuffle } from 'lodash'\n// import axios from '../../utils/axios';\n// import { bounce } from 'react-animations';\n// import Radium, { StyleRoot } from 'radium';\n\nconst students = Array.from(new Array(100)).map((item, index) => { return { student_name: '王' + index } })\n\nconst DEF = 'luck man'\n\nconst ClassMap = [{ id: 5779, label: '89期' }, { id: 5780, label: '90期' }]\n// const styles = {\n//   bounce: {\n//     animation: 'x 1s',\n//     animationName: Radium.keyframes(bounce, 'bounce')\n//   }\n// }\nwindow.shuffle = shuffle\nconst reg = /(?<=.)./g\nclass Roll extends Component {\n  state = {\n    luck: DEF,\n    isRoll: false\n  }\n\n  speed = 60\n\n  changeSpeed = (sp) => {\n    // console.log(sp)\n    this.speed = sp\n  }\n\n  componentDidMount () {\n    this.students = JSON.parse(localStorage.getItem('students')) || students\n\n  }\n\n\n  rollLuck = () => {\n    this.setState({\n      isRoll: !this.state.isRoll\n    }, () => {\n      if (this.state.isRoll) {\n        this.cln = setInterval(() => {\n          this.setState({\n            luck: this.selOne()\n          })\n        }, this.speed)\n      } else {\n        this.stopRoll()\n      }\n    })\n\n  }\n\n  stopRoll = () => {\n    this.cln && clearInterval(this.cln)\n  }\n\n  // 洗牌算法\n  shuffleClass = () => {\n    this.students = shuffle(this.students)\n    Toast.success(`成功洗牌${this.students.length}条数据，顺序已重新打乱！\n    \\r 结果：${this.students.map((item) => item.student_name.replace(reg, '*')).join(',')\n      }`, 6)\n    // console.log('清洗结果：', this.students)\n  }\n\n  selOne = () => {\n    let len = this.students.length\n    let one = Math.floor(Math.random() * len + 1) - 1\n    // 处理班级\n    let cur = this.students[one], name = cur.student_name\n    if (cur.class_id) {\n      const cas = ClassMap.filter((item) => item.id === cur.class_id)\n      cas.length && (name += `（${cas[0].label}）`)\n    }\n    return name\n  }\n\n  componentWillUnmount () {\n    this.stopRoll()\n  }\n  render () {\n    const { luck, isRoll } = this.state\n    return (\n      <div className=\"time\">\n        <WingBlank>\n          <Result\n            img={<Icon type=\"check-circle\" className=\"spe\" style={{ fill: '#e94f4f' }} />}\n            title={luck}\n            message=\"随机点名\"\n            buttonText={!isRoll ? '点名' : '停止'}\n            buttonType=\"primary\"\n            onButtonClick={this.rollLuck}\n          />\n          <WhiteSpace />\n          <Button type=\"warning\" onClick={this.shuffleClass} >洗牌</Button>\n          <Slider\n\n            marks={{ 10: '100迈', 50: '50迈', 90: '10迈' }}\n            defaultValue={this.speed}\n            min={10}\n            max={90}\n            onChange={this.changeSpeed}\n          />\n\n        </WingBlank>\n      </div>\n    )\n  }\n}\n\nexport default Roll"],"sourceRoot":""}